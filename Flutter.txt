with SingleTickerProviderStateMixi


thiết lập bộ điều khiển hoạt hình và tôi sẽ lưu nó ở đây trong bộ điều khiển, biến điều khiển
và xin lưu ý đây là một biến, tôi chỉ sử dụng loại thay vì từ khóa var vì tôi không khởi tạo
điều này với một giá trị và do đó loại này sẽ không được biết đến với bộ điều khiển hoạt hình và hoạt hình
à một lớp được cung cấp bởi Flutter giúp chúng ta kiểm soát hoạt hình như tên cho thấy.
+ AnimationControler 
-Khởi tạo AnimationControler : Constructor nhận vào 2 tham số
+ vsync:(this) về cơ bản là một đối số trong đó chúng ta cung cấp cho bộ điều khiển hoạt hình một con trỏ tại đối tượng,
+ Thời gian: 
- Thiết lập một đối tượng animation: Animation<Generic> name = new TWeen();
*TWeen nhân vào 2 tham số
+ begin: Size(Chiều cao , Chiều rộng)
+ end : Size(Chiều cao , chiều rộng)
.animate(
	CuverAnimation(
		parent: AnimationControler,
		curve : Hiệu ứng tạo animation
	)
)

Final: Animation.addListenner(()=>setState()): Thiết lập lắng nghe thay đổi animation 

==================================================================================================
II> Sử dung animatedBuilder

- (Listener animation , Builder: (context, child)=> widget sẽ render lại, child: Thuộc tính sẽ không render lại)

III> Work with animatedContainer

- AnimatedContainer(
	duration: thời gian
	Curvers : hiệu ứng
): Không cần sử dụng đên animation and AnimatedCotroller

- FadeTransition: (opacity: độ mờ (Animation<Opacity>), child)
- slideTransition: (position: animation<Offets>)

IV> Fading loading image

- FadeInImage(placeHorder: image, image: image(image))

V> CustomScrollView

CustomScrollView(
	Sliver:<Widget>[
		vd: SliverAppbar();
		SliverList(
			delegate:SilverChildListDelegate
		)
	]
)

- FlexibleSpaceBar(
	backgound: phần hiển thị để vuốt ẩn
	title: tên toolbar
)


VI> Custom Route Transition

- class extends PageTransactionBuilder
(
	@overide 
	BuilderTransaction()
)
- App dụng toàn theme
or
class Name<T> extends MaterialPageRoute<T>
	CustomRoute({
		WidgetBuilder builder,
		RouteSettings settings,
  }) : super(
          builder: builder,
          settings: settings,
        );
- App dụng cho một: (MaterialPageRoute)

================================================================================


*USE NATIVE DEVICE FEATURE
- File image;
* image.file (): Lấy ảnh thiết bị 

* xxxButton.icon(Nút vừa có icon và label);

**: Sử dụng image picker & Device camera
- ImagePicker.pickerImage/IamgePicker().getImage(Sourece: ImageSoucrce.camera/gerally ,...)

** Lưu trữ image
path_provider as asyPath
 sysPath.getApplicationDucumentDirection: Mục tài liệu ưng dung (Cái này dành riêng cho ứng dụng)
 sysPath.getApplicationSupportDirection:
 sysPath.getExternalStorageDirection: quyền truy cập vào thẻ SD bên ngoài 
 sysPath.getTemporatyDirection: Thư mục tạm thời và thường duyên thu dọn bởi bởi hệ thống


* USE SQLite 
Bước 1: sql.getDatapath(): Lấy đường dẫn database để mà tạo đạo database ở đường dẫn đó
Bước 2: sql.openDatabase(path, oncreate:(db, versiont): tạo database ): Mở database tìm mở database tồn tại hoặc tạo một cái mới(path.join(): nối đường đãn ) Bây giờ có thể đọc và viết;
Bước 3: dùng kết quả Bước 2 để thêm dữ liệu 
- conflicArgorithm.replace : insert data và mà id đã có databasse nó sẽ overide lại

=======================================
Location: thư viện location
+ Location().getLocation(): Lấy vị trí hiện tại











=================================================== CHAT APP =======================================================

I> FireBase là gì?
Firebase là một nền tảng để phát triển ứng dụng di động và trang web, bao gồm các API đơn giản và mạnh mẽ mà không cần backend hay server
Firebase là dịch vụ cơ sở dữ liệu hoạt động trên nền tảng đám mây – cloud. Kèm theo đó là hệ thống máy chủ cực kỳ mạnh mẽ của Google. Chức năng chính là giúp người dùng lập trình ứng dụng bằng cách đơn giản hóa các thao tác với cơ sở dữ liệu. Cụ thể là những giao diện lập trình ứng dụng API đơn giản. Mục đích nhằm tăng số lượng người dùng và thu lại nhiều lợi nhuận hơn.

Đặc biệt, còn là dịch vụ đa năng và bảo mật cực tốt. Firebase hỗ trợ cả hai nền tảng Android và IOS. Không có gì khó hiểu khi nhiều lập trình viên chọn Firebase làm nền tảng đầu tiên để xây dựng ứng dụng cho hàng triệu người dùng trên toàn thế giới



II> Bắt đầu Với thiết lập với firebase
bước 1: Tạo project
Bước 2 : thêm firebase vào ứng dụng android and IOS
Bước 3: Tạo Cloud database và thêm thư viện firestore

III>
 1. Thêm data vào firebase 
 + FireStore.instance.collection(path).add({- map- })
 
 IV> xác thực 


## Các widget
- StreamBuild(stream , builder()))
+ builder: có thể chuyển đổi các thành phần của luồng thành widget




































========================================================================= REST API ===========================================================================

API: Một API là một giao diện lập trình ứng dụng. Đó là một bộ quy tắc cho phép các chương trình nói chuyện với nhau. Nhà phát triển tạo API trên máy chủ và cho phép khách hàng nói chuyện với nó.
REST : Xác định API trông như thế nào . VIết tắt của "Representational State Transfer" Xác định một số quy tắt nhà nhà phát triển phải tuân theo khi tạo API của họ.
+ mỗi URL được gọi là một "yêu cầu - request" còn dữ liệu trả lợi là "phản hồi - reponse "
JSON: (Javascrip Object Notation): một đinh dạnh phổ biến để gửi dữ liệu thông qua REST API




